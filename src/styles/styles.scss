// Reset ------------------------------------------------------------------------------------------------------
html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li,
fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary, time, mark, audio, video, select, input {margin: 0;padding: 0;border: 0;font-size: 100%;vertical-align: baseline;}
article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section {display: block;}
body {line-height: 1.2;}
ol {padding: 0;list-style: decimal;}
ul {padding: 0;list-style: none;}
table {border-collapse: collapse;border-spacing: 0;}
* {&:focus,&:active {outline: none;}}
img {user-select: none;}
input {box-shadow: none;display: inline-block;border: none;}
textarea {resize: none;}
button {border: none;padding: 0;background: transparent;cursor: pointer;}
a {text-decoration: none;}


// Abstracts ------------------------------------------------------------------------------------------------------
$darkBlueColor: #002D62;
$blueColor: #6678A3;
$lightBlueColor: #EFF0F6;
$greenColor: #33F922;
$redColor: #F43434;
$darkGreyColor: #272727;
$greyColor: #444444;

$hover: all 0.12s linear;

$maxWidth: 1536;
$maxWidthContainer: 1350;

@mixin adaptive-value($property, $maxSize, $minSize, $modeCode, $customContainer: $maxWidthContainer) {
   $sizeDiff: $maxSize - $minSize;
   @if $modeCode == 1 {
      // Если меньше контейнера
      #{$property}: $maxSize + px;
      @media (max-width: #{$maxWidthContainer + px}) {
         #{$property}: calc(#{$minSize + px} + #{$sizeDiff} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
      }
   } @else if $modeCode == 2 {
      // Если больше контейнера
      #{$property}: $maxSize + px;
      @media (min-width: #{$maxWidthContainer + px}) {
         #{$property}: calc(#{$minSize + px} + #{$sizeDiff} * ((100vw - 320px) / #{$maxWidth - 320}));
      }
   } @else if $modeCode == 3 {
      // Если передали максимальную ширину контейнера
      #{$property}: $maxSize + px;
      @media (max-width: #{$customContainer + px}) {
         #{$property}: calc(#{$minSize + px} + #{$sizeDiff} * ((100vw - 320px) / #{$customContainer - 320}));
      }
   } @else {
      // Всегда
      #{$property}: calc(#{$minSize + px} + #{$sizeDiff} * ((100vw - 320px) / #{$maxWidth - 320}));
   }
}

@mixin empty-border($borderWidth, $borderSide) {
   @if $borderSide != 'all' {
      border-#{$borderSide}: $borderWidth solid transparent;
   } @else {
      border: $borderWidth solid transparent;
   }
}

@mixin visible-element {
   visibility: visible;
   opacity: 1;
   z-index: 1;
   transition: $hover;
}


// Default ------------------------------------------------------------------------------------------------------
body, html {
   height: 100%;}

body {
   position: relative; // for mobile menu
   font-family: "Roboto", sans-serif;
   font-size: 20px;
   font-weight: 400;
   
   &::-webkit-scrollbar {
      width: 0;
   }

   &._disble-scroll {
      overflow: hidden;
   }
}

// ::selection {}

.container {
   max-width: $maxWidthContainer + px;
   margin: 0 auto;
   padding: 0 15px;

   // min-height is (100vh - headerHeigth)
   &_with-spinner {
      display: flex;
      flex-direction: column;
      min-height: calc(100vh - 69.6px - 40px);

      @media (max-width: 650px) {
         min-height: calc(100vh - 59.6px - 40px);
      }
   }
}

.page-heading {
   @include adaptive-value("margin-bottom", 50, 20, 1); // custom container width
   border-bottom: 4px dotted $blueColor;
   @include adaptive-value("font-size", 70, 35, 1);
   font-weight: 800;
   color: $darkBlueColor;
}

.spinner {
   display: inline-block;
   border-radius: 50%;
   border-top: 3px solid $blueColor;
   border-right: 3px solid transparent;
   animation: spinner .7s linear infinite;
}

@keyframes spinner {
   to {
      transform: rotate(360deg);
   }
}

.center-container {
   display: flex;
   align-items: center;
   justify-content: center;
   flex-direction: column;
   flex-grow: 100;
}

.error {
   color: $redColor;
   text-align: center;

   &_large {
      @include adaptive-value("font-size", 35, 22.5, 1);
   }

   &_small {
      @include adaptive-value("font-size", 35, 22.5, 3, 900);
   }
}

.error-status {
   color: rgba($color: $redColor, $alpha: .8);
   text-align: center;

   &_large {
      @include adaptive-value("font-size", 20, 14, 1);
   }

   &_small {
      @include adaptive-value("font-size", 20, 14, 3, 900);
   }
}



// Header ------------------------------------------------------------------------------------------------------
.header {
   position: sticky;
   z-index: 100;
   top: 0;
   padding: 20px 0;
   background: #1B1827;

   @media (max-width: 625px) {
      padding: 15px 0;
   }
}

.navigation {
   display: flex;
   align-items: center;
   justify-content: space-between;

   // logo is not an img, but html elements
   &__logo-link {
      position: relative;
      cursor: default;
      font-size: 25px;
      font-weight: 500;
      color: #fff;

      &::after {
         position: absolute;
         right: -10px;
         bottom: 4px;
         width: 9px;
         height: 9px;
         border-radius: 50%;
         content: '';
         background: $greenColor;
      }
   }

   &__list {
      display: flex;

      &._active {
         top: 0;
         transition: all 0.2s ease-in;
      }

      @media (max-width: 650px) {
         position: absolute;
         left: 0;
         top: -100vh;
         flex-direction: column;
         justify-content: center;
         align-items: center;
         width: 100vw;
         height: 100vh;
         background: rgba(0, 0, 0, .9);
         z-index: 101;
         transition: all 0.2s ease-in;
         overflow-y: auto;
      }
   }
   
   &__item + &__item {
      @media (min-width: 650px) {
         @include adaptive-value('margin-left', 60, 20, 1);
      }

      @media (max-width: 650px) {
         margin-top: 40px;
      }
   }

   &__item_dropdown {
      position: relative;
      cursor: default;

      @media (any-hover: hover) {
         &:hover {
            .dropdown {
               @include visible-element();
            }

            // remove default border-bottom with hover
            .navigation__link {
               border-color: transparent;
            }

            .navigation__arrow {
               transform: rotate(-180deg);
               transition: $hover;
            }
         }
      }

      @media (any-hover: none) {
         &._touched {
            .dropdown {
               @include visible-element();
            }

            .navigation__arrow {
               transform: rotate(-180deg);
               transition: $hover;
            }
         }
      }
   }


   &__link {
      font-weight: 300;
      color: $lightBlueColor;

      @media (any-hover: hover) {
         @include empty-border(1px, 'bottom');
         transition: $hover;
         
         &:hover {
            border-color: $lightBlueColor;
            transition: $hover;
         }
      }
   }

   &__link._notification {
      position: relative;

      &::after {
         position: absolute;
         content: '';
         width: 9px;
         height: 9px;
         background: $redColor;
         border-radius: 50%;
         top: 0;
         right: -11px;
      }
   }

   &__arrow {
      height: 10px;
      margin-left: 5px;
      fill: $lightBlueColor;
      transition: $hover;
   }
}

.dropdown {
   position: absolute;
   top: 15px;
   padding-top: 15px;
   visibility: hidden;
   opacity: 0;
   z-index: -1;
   transition: $hover;

   &__list {
      max-height: 250px;
      overflow-y: auto;
      padding: 0 20px;
      box-shadow: 0 0 10px $greyColor;
      background: #fff;
   }

   &__item {
      width: 150px;
      padding: 15px 0;

      a {
         transition: $hover;
         color: $greyColor;

         &:hover {
            color: $blueColor;
            transition: $hover;
         }
      }

      & + & {
         border-top: 1px solid $greyColor
      }
   }

   &__item_current {
      a {
         display: inline-flex;
         align-items: center;
         justify-content: flex-start;
         position: relative;
         padding-right: 5px;
         color: #000;

         &::after {
            position: absolute;
            right: -9px;
            width: 9px;
            height: 9px;
            border-radius: 50%;
            content: '';
            background: $greenColor;
         }
      }
   }
}

// if nav is mobile, but dropdown is closed
@media (max-width: 650px) {
   .navigation__list {
      position: absolute;
      left: 0;
      top: -100vh;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      width: 100vw;
      height: 100vh;
      overflow-y: auto;
      z-index: 101;
      background: rgba(0, 0, 0, .9);
      transition: all 0.2s ease-in;
   }

   .navigation__item_dropdown {
      text-align: center;
   
      & > svg,
      & > span {
         display: inline-block;
      }
   
      .dropdown {
         position: relative;
         top: 0;
         height: 0;
         padding: 0;
         margin-top: 10px;
   
         &__list {
            padding: 0 20px 0 15px;
         }
      }
   }
}

.burger {
   display: none;
   position: relative;
   width: 30px;
   height: 20px;
   cursor: pointer;
   z-index: 102;

   span,
   &::before,
   &::after {
      display: inline-block;
      position: absolute;
      left: 0;
		width: 100%;
		height: 2px;
      background: #fff;
		transition: $hover;
   }

   span {
      top: 9px;
   }
   
   &::before {
      content: '';
      top: 0;
   }

   &::after {
      content: '';
      bottom: 0;
   }

   // change burger color with hover
   /*
   @media (any-hover: hover) {
      &:hover {
         span,
         &::before,
         &::after {
            // background: 
         }
      }
   }
   */

   &._active {
      span,
      &::before,
      &::after {
         background: $redColor;
      }

      span {
         transform: scale(0);
      }

      &::before {
         transform: rotate(45deg);
         top: 8px;
      }

      &::after {
         transform: rotate(-45deg);
         bottom: 10px;
      }
   }

   @media (max-width: 650px) {
      display: inline-block;
   }
}


// Lesson page ------------------------------------------------------------------------------------------------------
.lesson {
   .container {
      padding: 20px 0 40px 0;
      @include adaptive-value("padding-right", 55, 15, 3, 900); // custom container width
      @include adaptive-value("padding-left", 55, 35, 3, 900); // custom container width
      max-width: 900px;
      margin: 0 auto;
   }

   &__heading {
      @include adaptive-value("margin-bottom", 50, 25, 3, 900); // custom container width
      @include adaptive-value("font-size", 70, 43, 3, 900); // custom container width
   }

   &__words-wrapper {
      display: grid;
      @include adaptive-value("row-gap", 20, 12.5, 3, 900); // custom container width

      &_1-set {
         grid-template-columns: 1fr;
      }

      &_2-set {
         grid-template-columns: repeat(2, 1fr);

         .lesson__word:nth-child(odd):last-child {
            grid-column: span 2;
         }
      }

      &_3-set {
         grid-template-columns: repeat(3, 1fr);

         .lesson__word:nth-child(5n):last-child {
            grid-column: span 2;
         }

         .lesson__word:nth-child(4n):last-child {
            grid-column: span 3;
         }

         @media (max-width: 750px) {
            grid-template-columns: 1fr 1fr;

            .lesson__word:nth-child(odd):last-child {
               grid-column: span 2;
            }

            .lesson__word:nth-child(4n):last-child {
               grid-column: span 1;
            }
         }
      }

      &_4-set {
         grid-template-columns: repeat(4, 1fr);

         @media (max-width: 650px) {
            grid-template-columns: 1fr 1fr;
         }
      }
   }

   &__word {
      position: relative;
      padding: 6px;
      @include adaptive-value("font-size", 25, 17.5, 3, 900); // custom container width
      font-weight: 500;
      color: $darkBlueColor;
      background: $lightBlueColor;


      .lesson__english-text {
         display: inline-block;
         cursor: default;

         @media (any-hover: hover) {
            &:hover .lesson__translation-text {
               @include visible-element();
            }
         }

         @media (any-hover: none) {
            &._touched .lesson__translation-text {
               @include visible-element();
            }
         }
      }

      .lesson__translation-text {
         position: absolute;
         top: calc(100% - 5.5px);
         left: 0;
         padding: 5px 10px;
         border-radius: 5px;
         @include adaptive-value("font-size", 22, 15, 3, 900); // custom container width;
         font-weight: 300;
         color: #fff;
         background: $blueColor;
         transition: $hover;

         // hidden element
         visibility: hidden;
         opacity: 0;
         z-index: -1;
      }
      
      &_theme p {
         text-decoration: underline;
      }
   }

   &__rule {
      margin: 20px 0;
      @include adaptive-value("font-size", 21, 16, 3, 900); // custom container width
      font-weight: 700;
   }

   &__question-wrapper {
      margin: 25px 0;
   }

   &__question-text,
   &__answer-text,
   &__idiom-text,
   &__idiom-example {
      @include adaptive-value("font-size", 20, 15, 3, 900); // custom container width
   }
   
   &__answer-text {
      width: 60%;
      margin-left: auto;
      text-align: right;
      font-weight: 300;

      @media (max-width: 650px) {
         width: 80%;
      }
   }

   &__idiom {
      background: $lightBlueColor;
      padding: 6px 10px;
   }

   &__idiom-number {
      display: inline-block;
      padding-bottom: 2px;
      border-bottom: 3.5px solid $darkBlueColor;
      @include adaptive-value("font-size", 27, 20, 3, 900); // custom container width
      font-weight: 700;
      color: $darkBlueColor;
   }

   &__idiom-text span,
   &__idiom-example {
      font-weight: 300;
   }

   &__idiom-text {
      margin: 0.3em 0 0.5em 0;
   }

   &__rule + &__rule,
   &__question-wrapper + &__question-wrapper,
   &__rule + &__question-wrapper,
   &__question-wrapper + &__rule {
      margin-top: 0;
   }

   &__audio {
      width: 100%;
      margin-top: 20px;
   }
}

.dictation {
   margin-top: 15px;

   &__header {
      display: flex;
      align-items: center;
   }

   &__image {
      @include adaptive-value("width", 95, 60, 3, 900); // custom container width
   }

   &__number {
      flex-grow: 1;
      border-bottom: 4px dotted $blueColor;
      @include adaptive-value("font-size", 19, 14, 3, 900); // custom container width
      font-style: italic;
      color: $darkBlueColor;
   }

   &__text {
      margin-top: 0.3em;
      @include adaptive-value("font-size", 20, 15, 3, 900); // custom container width
      font-weight: 300;
   }
}

.page-number {
   position: relative;

   &::before {
      position: absolute;
      top: 0px;
      @include adaptive-value("left", -50, -30, 3, 900); // custom container width
      @include adaptive-value("font-size", 20, 15, 3, 900); // custom container width
      color: $greyColor;
      font-weight: 300;
      content: attr(data-defore-content);
   }
}


// Homework ------------------------------------------------------------------------------------------------------
.homework {
   .container {
      padding: 20px
   }

   &__wrapper {
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
   }

   &__column {
      width: calc(33% - 40px/3);

      @media (max-width: 910px) {
         width: calc(50% - 20px/2);
      }

      @media (max-width: 600px) {
         width: 100%;
      }
   }

   &__item {
      border-radius: 5px;
      box-sizing: border-box;
      padding: 20px;
      box-shadow: 0 2px 7px $greyColor;

      & + & {
         margin-top: 25px;

         @media (max-width: 910px) {
            margin-top: 20px;
         }
      }
   }

   &__theme {
      @include adaptive-value("font-size", 27.5, 17, 1);
      margin-bottom: 10px/27.5px * 1em;
   }

   &__description {
      @include adaptive-value("font-size", 21.5, 15, 1);
      font-weight: 400;
      color: $greyColor;
   }

   &__state {
      @include adaptive-value("font-size", 20, 14, 1);
      margin-top: 0.6em;
      text-align: right;
   }

   &__date {
      margin-right: 0.7em;
      font-weight: 300;
      color: $greyColor;

      &_completed {
         text-decoration: line-through;
      }
   }

   &__completed {
      color: $greenColor;
   }

   &__time-left {
      color: $redColor;
   }
}


// Vocabulary ------------------------------------------------------------------------------------------------------
.vocabulary {
   .container {
      max-width: 900px;
      padding: 20px;
   }

   &__heading {
      @include adaptive-value("font-size", 70, 40, 3, 900); // custom container width
      @include adaptive-value("margin-bottom", 40, 15, 3, 900); // custom container width
   }

   &__wrapper {
      display: flex;
      justify-content: space-between;
   }

   &__column {
      width: calc(50% - 30px);

      @media (max-width: 650px) {
         width: 100%;
      }
   }

   &__lesson {
      display: inline-block;
      @include adaptive-value('font-size', 27.5, 17.5, 3, 900);
      margin: .5em 0 .1em 0;
      font-weight: 700;
      color: #000;
   }

   &__item {
      display: flex;
      justify-content: flex-end;
      padding: 2.5px 0;
   }

   &__page {
      @include adaptive-value('font-size', 20, 15, 3, 900);
      padding-right: 10px;
   }

   &__english {
      @include adaptive-value('font-size', 20, 15, 3, 900);
      flex-grow: 1;
      padding-right: 0.2em;
   }
   
   &__translation {
      @include adaptive-value('font-size', 20, 15, 3, 900);
      position: relative;
      flex-grow: 0;
      text-align: right;
      padding-left: 0.4em;
   }

   &__dotts {
      flex-grow: 100;
      border-bottom: 3px dotted $greyColor;
      margin-bottom: 3px;
   }
}


// Idioms ------------------------------------------------------------------------------------------------------
.idioms {
   .container {
      padding: 20px;
   }
}


// 404 ------------------------------------------------------------------------------------------------------
.page-404 {
   .container {
      padding: 20px;
   }
}